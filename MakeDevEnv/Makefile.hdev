#===============================================================================
# 2019 Sep
# 	 Create --langdef=hisi_hal{base=C} in hisi.ctags to parse "HAL_DECLARE_INTF" marco 
#
#
# 2019 May 
# 
#	  Replace ctags command from
#		"ctags -r --languages=c --c-kinds=+cdefglmnpstuvx --fields=+aiksz --extra=+q --exclude=@.ctagsignore -f c_tags; \"
#	  to:
#		"ctags -R --languages=c --exclude=@.ctagsignore -f c_tags; \"
#	   
#	   .ctagsignore contains path should format such like following:
#			build_dir/target-arm-openwrt-linux-uclibcgnueabi/hi_gateway
#	   not
#			./build_dir/target-arm-openwrt-linux-uclibcgnueabi/hi_gateway/
#
# 2019 June
#     Using universal-ctags replace to exuberant-ctags, command as following:
#   		"ctags --options=NONE --options=$(BIN)/.myctags/hisi.ctags --langmap=c:+.h --extras=+q --if0=no -o c_tags -R --exclude=@.ctagsignore"
#   		
# 2019 Sep
#  	  create $(BIN) to maintaince the linux.ctags
#
# 2019 Dec
# 	  optimize this Makefile script, and functiont to operate ctags
#
# 2020 Apr
# 	  add chip verify to switch GATEWAY_PATH 
#===============================================================================

#===============================================================================
# Note: chear defined Makefile for ctags and cscope
#===============================================================================
ifndef chip
chip = hsan
endif

CURRENT_DIR=$(shell pwd)
BIN=$(shell cd ~/;pwd)
PARSER_PATH=$(BIN)/.vim_runtime/ctags_parser

Q=@
LINUX_PATH=$(CURRENT_DIR)/openwrt/build_dir/target-arm-openwrt-linux-uclibcgnueabi/linux-$(chip)_generic/linux-3.18.11
LINUX_HI_BOOT_PATH=$(CURRENT_DIR)/openwrt/build_dir/target-arm-openwrt-linux-uclibcgnueabi/hi_boot/hi-boot-ram
CM_PATH=$(CURRENT_DIR)/openwrt/package/gateway/service
OPENWRT_PATH=$(CURRENT_DIR)/openwrt
GATEWAY_PATH=$(CURRENT_DIR)/hisilicon/gateway
#GATEWAY_PATH=$(CURRENT_DIR)/openwrt/package/gateway
#GATEWAY_LINUX_PATH=$(CURRENT_DIR)/solution/patch/openwrt/target/linux/hi5663h/files
GATEWAY_LINUX_PATH=$(CURRENT_DIR)/solution/patch/linux-3.18.11
VENDOR_PATH=$(CURRENT_DIR)/openwrt/package/vendors
BUSYBOX_PATH=$(OPENWRT_PATH)/build_dir/target-arm-openwrt-linux-uclibcgnueabi/busybox-1.22.1

ifeq ($(strip $(chip)),sd5116)
GATEWAY_LINUX_PATH=$(CURRENT_DIR)/solution/patch/openwrt/target/linux/$(chip)/files
LINUX_HI_BOOT_PATH=$(CURRENT_DIR)/openwrt/build_dir/target-arm-openwrt-linux-uclibcgnueabi/hi_boot/hiboot/hi-boot-ram/hi-boot-ram-1.0.0
else ifeq ($(strip $(chip)),5682t)
GATEWAY_LINUX_PATH=$(CURRENT_DIR)/opensrc/kernel/linux-4.4.51
LINUX_HI_BOOT_PATH=$(CURRENT_DIR)/hisilicon/boot
LINUX_PATH=$(GATEWAY_LINUX_PATH)
oBUSYBOX_PATH=$(OPENWRT_PATH)/opensrc/busybox/busybox-1.22.1
endif

#######################   function define begin  ######################
define GenerateHisiCtags
	echo "generate hisi rules";
	@if [ ! -e $(1)/.ctagsignore ];then \
		echo "svn" > $(1)/.ctagsignore; \
	fi;
	$(Q)cd $(1); \
	ctags --options=NONE --options=$(PARSER_PATH)/hisi.ctags --langmap=c:+.h --extras=+q --if0=no -o c_tags -R --exclude=@.ctagsignore;\
	/usr/bin/find $(1) -name "*.c" -o -name "*.h" -o -name "*.java" -o -name "*.cpp" -o -name "*.py" -o -name "*.sh" -o -name "*.lua" > $(1)/cs.files;\
	cscope -b -k -q $(1)/cs.files;
	@if [ -e $(1)/.previm ];then\
		rm $(1)/.previm;\
	fi;
	echo "set tags=$(1)/c_tags " > $(1)/.previm 
endef


define GenerateLinuxCtags
	echo "generate linux rules";
	@if [ ! -e $(1)/.ctagsignore ];then \
		echo "svn" > $(1)/.ctagsignore; \
	fi;
	$(Q)cd $(1); \
	ctags --options=NONE --options=$(PARSER_PATH)/linux.ctags --langmap=c:+.h --extras=+q --if0=no -o c_tags -R --exclude=@.ctagsignore;\
	/usr/bin/find $(1) -name "*.c" -o -name "*.h" -o -name "*.java" -o -name "*.cpp" -o -name "*.py" -o -name "*.sh" -o -name "*.lua" > $(1)/cs.files;\
	cscope -b -k -q $(1)/cs.files;
	@if [ -e $(1)/.previm ];then\
		rm $(1)/.previm;\
		fi;
	echo "set tags=$(1)/c_tags " > $(1)/.previm 
endef


define Clean
	$(RM) $(1)/.previm ;\
	$(RM) $(1)/c_tags;\
	$(RM) $(1)/cscope* ;\
	$(RM) $(1)/cs.files ;\
	$(RM) $(1)/.ctagsignore;
endef
#######################   function define end   ######################


.PHONY:service_env
service_env:
	echo "generate service env"
	$(call GenerateHisiCtags,$(CM_PATH))

.PHONY:des_clean
des_clean:gateway_clean vendors_clean linux_clean service_clean busybox_clean


.PHONY:gateway_env
gateway_env:
	echo "hisilicon gateway  1"
	$(call GenerateHisiCtags,$(GATEWAY_PATH))
	echo "hisilicon linux patch"
	$(call GenerateLinuxCtags,$(GATEWAY_LINUX_PATH))
	echo "set tags+=$(GATEWAY_LINUX_PATH)/c_tags " >> $(GATEWAY_PATH)/.previm 


.PHONY:gateway_clean
gateway_clean:
	$(call Clean,$(GATEWAY_PATH))
	$(call Clean,$(GATEWAY_LINUX_PATH))


.PHONY:vendors_env
vendors_env:
	echo "vendor env"
	$(call GenerateHisiCtags,$(VENDOR_PATH))

.PHONY:vendors_clean
vendors_clean:
	$(call Clean,$(VENDOR_PATH))

.PHONY:linux_env
linux_env:
	echo "linux whole kernel 1"
	$(call GenerateLinuxCtags,$(LINUX_PATH))
	echo "linux whole hi_boot"
	$(call GenerateLinuxCtags,$(LINUX_HI_BOOT_PATH))

.PHONY:linux_clean
linux_clean:
	$(call Clean,$(LINUX_PATH))
	$(call Clean,$(LINUX_HI_BOOT_PATH))

.PHONY:busybox_env
busybox_env:
	echo "busybox 1"
	$(call GenerateLinuxCtags,$(BUSYBOX_PATH))

.PHONY:busybox_clean
busybox_clean:
	$(call Clean,$(BUSYBOX_PATH))

